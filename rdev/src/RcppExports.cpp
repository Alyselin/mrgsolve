// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/mrgsolve.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// DEVTRAN
Rcpp::List DEVTRAN(Rcpp::List parin, Rcpp::NumericVector inpar, Rcpp::CharacterVector parnames_, Rcpp::NumericVector init, Rcpp::CharacterVector cmtnames_, Rcpp::List funs, Rcpp::NumericMatrix data, Rcpp::NumericMatrix idata, Rcpp::NumericMatrix OMEGA, Rcpp::NumericMatrix SIGMA);
RcppExport SEXP mrgsolve_DEVTRAN(SEXP parinSEXP, SEXP inparSEXP, SEXP parnames_SEXP, SEXP initSEXP, SEXP cmtnames_SEXP, SEXP funsSEXP, SEXP dataSEXP, SEXP idataSEXP, SEXP OMEGASEXP, SEXP SIGMASEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type parin(parinSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type inpar(inparSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type parnames_(parnames_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type cmtnames_(cmtnames_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type funs(funsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type idata(idataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type OMEGA(OMEGASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type SIGMA(SIGMASEXP);
    __result = Rcpp::wrap(DEVTRAN(parin, inpar, parnames_, init, cmtnames_, funs, data, idata, OMEGA, SIGMA));
    return __result;
END_RCPP
}
// EXPAND_EVENTS
Rcpp::NumericMatrix EXPAND_EVENTS(Rcpp::List parin, Rcpp::NumericMatrix events, Rcpp::NumericVector id);
RcppExport SEXP mrgsolve_EXPAND_EVENTS(SEXP parinSEXP, SEXP eventsSEXP, SEXP idSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type parin(parinSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type id(idSEXP);
    __result = Rcpp::wrap(EXPAND_EVENTS(parin, events, id));
    return __result;
END_RCPP
}
// test_stop
void test_stop();
RcppExport SEXP mrgsolve_test_stop() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    test_stop();
    return R_NilValue;
END_RCPP
}
// CALLINIT
Rcpp::NumericVector CALLINIT(Rcpp::NumericVector Nparam, Rcpp::NumericVector Ninit, SEXP xifun);
RcppExport SEXP mrgsolve_CALLINIT(SEXP NparamSEXP, SEXP NinitSEXP, SEXP xifunSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Nparam(NparamSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Ninit(NinitSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xifun(xifunSEXP);
    __result = Rcpp::wrap(CALLINIT(Nparam, Ninit, xifun));
    return __result;
END_RCPP
}
// TOUCH_FUNS
Rcpp::List TOUCH_FUNS(Rcpp::NumericVector lparam, Rcpp::NumericVector linit, SEXP xifun, SEXP xtfun, SEXP xdfun);
RcppExport SEXP mrgsolve_TOUCH_FUNS(SEXP lparamSEXP, SEXP linitSEXP, SEXP xifunSEXP, SEXP xtfunSEXP, SEXP xdfunSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lparam(lparamSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type linit(linitSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xifun(xifunSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xtfun(xtfunSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xdfun(xdfunSEXP);
    __result = Rcpp::wrap(TOUCH_FUNS(lparam, linit, xifun, xtfun, xdfun));
    return __result;
END_RCPP
}
// MVGAUSS
arma::mat MVGAUSS(Rcpp::NumericMatrix OMEGA_, int n, int seed);
RcppExport SEXP mrgsolve_MVGAUSS(SEXP OMEGA_SEXP, SEXP nSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type OMEGA_(OMEGA_SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    __result = Rcpp::wrap(MVGAUSS(OMEGA_, n, seed));
    return __result;
END_RCPP
}
// SIMRE
Rcpp::List SIMRE(int n1, Rcpp::NumericMatrix OMEGA, int n2, Rcpp::NumericMatrix SIGMA, int seed);
RcppExport SEXP mrgsolve_SIMRE(SEXP n1SEXP, SEXP OMEGASEXP, SEXP n2SEXP, SEXP SIGMASEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type OMEGA(OMEGASEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type SIGMA(SIGMASEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    __result = Rcpp::wrap(SIMRE(n1, OMEGA, n2, SIGMA, seed));
    return __result;
END_RCPP
}
// decorr
void decorr(Rcpp::NumericMatrix x);
RcppExport SEXP mrgsolve_decorr(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    decorr(x);
    return R_NilValue;
END_RCPP
}
// ZERO
Rcpp::NumericMatrix ZERO(Rcpp::NumericMatrix x);
RcppExport SEXP mrgsolve_ZERO(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    __result = Rcpp::wrap(ZERO(x));
    return __result;
END_RCPP
}
// SUPERMATRIX
Rcpp::NumericMatrix SUPERMATRIX(Rcpp::List a, bool keep_names);
RcppExport SEXP mrgsolve_SUPERMATRIX(SEXP aSEXP, SEXP keep_namesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type a(aSEXP);
    Rcpp::traits::input_parameter< bool >::type keep_names(keep_namesSEXP);
    __result = Rcpp::wrap(SUPERMATRIX(a, keep_names));
    return __result;
END_RCPP
}
// map_data_set
Rcpp::List map_data_set(Rcpp::NumericMatrix data_, Rcpp::NumericVector inpar, bool lc_);
RcppExport SEXP mrgsolve_map_data_set(SEXP data_SEXP, SEXP inparSEXP, SEXP lc_SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type data_(data_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type inpar(inparSEXP);
    Rcpp::traits::input_parameter< bool >::type lc_(lc_SEXP);
    __result = Rcpp::wrap(map_data_set(data_, inpar, lc_));
    return __result;
END_RCPP
}
